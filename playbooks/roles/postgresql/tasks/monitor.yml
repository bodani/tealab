### 该用户用于监控 Postgresql RAISE NOTICE 'User "monitor" already exists. Skipping.';
- name: monitor | create user for monitor
  postgresql_query: 
    db: postgres
    query: |
      DO
      $do$
      BEGIN
        IF EXISTS (
            SELECT FROM pg_catalog.pg_user
            WHERE  usename = 'tea_mon') THEN
        ELSE
            create user tea_mon CONNECTION LIMIT  10;
            GRANT pg_monitor to tea_mon;
            ALTER USER tea_mon SET SEARCH_PATH TO tea_mon,pg_catalog;
        END IF;
      END
      $do$;
  become_user: postgres
  when: replicaof is undefined |bool
  run_once: true

- name: monitor | install postgresql_exporter 
  copy: 
    src: "{{local_bin}}/postgresql/postgres_exporter"
    dest: /usr/local/bin/postgres_exporter
    mode: 0755
    owner: postgres
    group: postgres

- name: moinitor |  create directory postgresql_exporter
  file:
    path: /etc/postgres_exporter
    state: directory
    owner: postgres
    group: postgres
  
- name: monitor | postgres query 
  copy: 
    src: queries.yml
    dest: /etc/postgres_exporter/postgres-queries.yml
    owner: postgres
    group: postgres

- name: monitor | postgres_exporter service
  template:
    src: postgres-exporter.service.j2
    dest: /usr/lib/systemd/system/postgres-exporter.service

- name: monitor | start postgresql exporter
  service:
    name: postgres-exporter
    state: started
    daemon-reload: true
    enabled: true

- name: wait for postgres exporter started
  wait_for:
    port: 9187
    state: started

##################################################################################
#                        配置prometheus                                           #
##################################################################################
- name: create prometheus filediscover postgres yml
  blockinfile:
    path: /etc/prometheus/prometheus.yml
    state: present
    marker: "# {mark} Postgresql JOB  "
    content: |
      #  promethes auto discover etcd jobs  
        - job_name: 'postgresql'
          scrape_interval: 5s
          file_sd_configs:
            - refresh_interval: 10s
              files:
              - /etc/prometheus/pgs/*.yml 
    # validate: promtool check config %s
  notify: restart_prometheus  
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: add postgres discover server
  file:  
    path: /etc/prometheus/pgs
    state: directory
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: add postgres server yml
  copy:
    dest: /etc/prometheus/pgs/{{ inventory_hostname }}.yml
    content: | 
      - targets: ['{{ inventory_hostname }}:9187']
        labels:
          pg_cluster_name: "{{ pg_cluster_name }}"
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"

- name: add postgres rules
  copy:
    dest: /etc/prometheus/rules/pg_alert.yml
    src: rules/pg_alert.yml
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"

##################################################################################
#                        配置grafana                                              #
##################################################################################
- name: prepare etcd dashboard json
  copy:
    dest: /var/lib/grafana/dashboards/
    src: dashboards/pg
    owner: grafana
    group: grafana
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: load grafana dashboard
  shell: | 
    sh /var/lib/grafana/load_dashboard.sh
    sh /var/lib/grafana/clean_dashboards_jsons.sh
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  