############################################################
#        安装与postgres对应版本的repmgr软件包                  #
############################################################
- name: install repmgr
  package:
    name: repmgr{{PG_VERSION}}.x86_64
    state: present
  tags: repmgr

############################################################
#        配置集群间node ， postgres 用户下passwordless ssh    #
############################################################
- name: delete temp ssh keys
  file: 
    name: /tmp/{{ item }}
    state: absent
  with_items: 
    - id_rsa
    - id_rsa.pub
    - authorized_keys
  delegate_to: localhost

#   command : echo -e 'y\n'|ssh-keygen -q -t dsa -f ~/.ssh/id_dsa -C "" -N ""
#   command : echo -e 'y\n'|ssh-keygen -q -t ecdsa -f ~/.ssh/id_ecdsa -C "" -N ""
- name: Generate ssh RSA host key
  shell : | 
   echo -e 'y\n'|ssh-keygen -q -t rsa -f /tmp/id_rsa -C "" -N ""
   cat  /tmp/id_rsa.pub >> /tmp/authorized_keys
   chmod 666 /tmp/id_rsa
   chmod 666 /tmp/id_rsa.pub
   chmod 666 /tmp/authorized_keys
  delegate_to: localhost

- name: set repmgr_ssh_key
  become_user: postgres
  copy: 
    dest: "~/.ssh/{{ item }}"
    src: /tmp/{{ item }}
    mode: 0600
  with_items: 
    - id_rsa
    - id_rsa.pub
    - authorized_keys

- name: delete temp ssh keys
  file: 
    name: /tmp/{{ item }}
    state: absent
  with_items: 
    - id_rsa
    - id_rsa.pub
    - authorized_keys

- name: collect ssh fingerprints
  become_user: postgres
  shell: >
    ssh-keyscan
    {% for host in groups['postgresql'] %}
    {{ host }}
    {% endfor %}
  register: __ssh_fingerprints

- name: ssh known_hosts
  become_user: postgres
  lineinfile:
    dest: ~/.ssh/known_hosts
    create: yes
    owner: "postgres"
    group: "postgres"
    mode: 0600
    line: "{{ item }}"
  with_items: "{{ __ssh_fingerprints.stdout_lines }}"

############################################################
#         赋予postgres 用户 , 部分sudo 执行权限               #
############################################################
- name: postgres sudo privates
  copy:
    dest: /etc/sudoers.d/postgres
    content: | 
      Defaults:postgres !requiretty
      postgres ALL = NOPASSWD: /usr/bin/systemctl stop postgresql-{{PG_VERSION}}, \
      /usr/bin/systemctl start postgresql-{{PG_VERSION}}, \
      /usr/bin/systemctl restart postgresql-{{PG_VERSION}}, \
      /usr/bin/systemctl reload postgresql-{{PG_VERSION}}
    mode: 0400

- name: setting shared_preload_libraries
  replace:
    path: "{{PG_DATA}}/postgresql.conf"
    regexp: "^shared_preload_libraries = (.*)"
    replace: "shared_preload_libraries = 'pg_repack'"
  notify:
    - Restart PostgreSQL

############################################################
#         在主库创建repmgr database 。 owner 为 repuser      #
############################################################
# psql -c 'ALTER USER repmgr SET search_path TO repmgr, "$user", public;'
- name: create database for repmgr
  postgresql_db:
    name: "repmgr"
    owner: "{{ rep_user }}"
    conn_limit: 20
    template: "template0"
    state: present
  when: replicaof is undefined

# 创建 repmgr extention
- name: create extention repmgr
  postgresql_ext: 
    db: repmgr
    name: repmgr
  when: replicaof is undefined

- name: config repmgr 
  template:
    src: repmgr-{{PG_VERSION}}.conf.j2
    dest: /etc/repmgr/{{PG_VERSION}}/repmgr.conf

############################################################
#        注册主服务器                                        #
############################################################
- name: register primary
  shell: |
    /usr/pgsql-{{PG_VERSION}}/bin/repmgr -f /etc/repmgr/{{PG_VERSION}}/repmgr.conf primary register 
  when: replicaof is undefined

############################################################
#        注册从服务器                                        #
############################################################
- name: standby clone 
  shell: |
    /usr/pgsql-{{PG_VERSION}}/bin/repmgr -h {{replicaof}}} -U repmgr -d repmgr -f /etc/repmgr/{{PG_VERSION}}/repmgr.conf standby clone  
  when: replicaof is defined

- name: start standby postgresql service
  block:
    - name: start standby postgresql service
      service:  
        name: postgresql-{{PG_VERSION}}
        state: started
        enabled: true

    - name: wait for postgresql start
      wait_for: 
        port: 5432
        state: started
    
    - name: register standby
      shell: 
        /usr/pgsql-{{PG_VERSION}}/bin/repmgr -f /etc/repmgr/{{PG_VERSION}}/repmgr.conf standby register 

  when: replicaof is defined                                        

############################################################
#        repmgrd , autofailover                            #
############################################################
- name: start standby postgresql service
  service:  
    name: repmgr-{{PG_VERSION}}
    state: started
    enabled: true
