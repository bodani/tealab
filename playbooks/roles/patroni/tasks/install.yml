- name: install | Install Patrini Package [ETCD]
  package:
    name: "{{ item }}"
    state: present
  with_items: 
    - patroni-etcd
    - patroni
  when: ansible_distribution == "CentOS"
  notify: restart patroni

- name: install | copy patroni.service
  template: 
    src: patroni.service.j2
    dest: /usr/lib/systemd/system/patroni.service
  notify: restart patroni


- name: install | create certs dir
  file: 
    path: /etc/patroni/certs/
    state: directory

- name: install | copy patroni config file
  template: 
    src: patroni.mini.yml.j2
    dest: /etc/patroni/patroni.yml
  notify: reload patroni

- name: install | copy etcd client certs
  copy: 
    src: "{{item.name}}"
    dest: "/etc/patroni/certs/{{item.value}}" 
  with_items:
   - { name: '{{CACERT}}',value: 'etcd-ca.pem' }
   - { name: '{{ETCD_CLIENT_CERT}}', value: 'etcd-client-cert.pem' }
   - { name: '{{ETCD_CLIENT_KEY}}',value: 'etcd-client-key.pem' }

- name: install | copy patroni calls
  copy: 
    src: callbacks.sh
    dest: /etc/patroni/callbacks/callbacks.sh
    mode: 0777
  notify: reload patroni

- name: install | patroni log dir
  file:
    path: /var/log/patroni
    state: directory
    owner: postgres
    group: postgres

- name: install | patronictl alias
  copy:
    dest: /etc/profile.d/patroni.sh
    content: 
      alias patronictl="patronictl -c /etc/patroni/patroni.yml"
    mode: 0777

- name: install | init cluster leader node    
  block:
  - name: install | start patroni service leader
    service: 
      name: patroni
      state: started
      daemon_reload: true
      enabled: true

  - name: install | wait for  postgres started leader
    wait_for:
      port: 5432
      state: started
      sleep: 1
      delay: 5
      timeout: 180

  - name: install | wait for patroni started leader
    get_url:
      url: http://{{inventory_hostname}}:8008/primary
      dest: /dev/null
    register: check_result 
    any_errors_fatal: true
    # ignore_errors: false
    failed_when: check_result.status_code != 200
  when: is_leader|bool

- name: install | start patroni service replica
  service: 
    name: patroni
    state: started
    daemon_reload: true
    enabled: true
  when: not is_leader|bool

- name: install | wait for postgres started
  wait_for:
    port: 5432
    state: started

- name: install | wait for patroni started
  wait_for:
    port: 8008
    host: "{{ inventory_hostname }}"
    state: started