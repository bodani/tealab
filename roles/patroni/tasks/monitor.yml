##################################################################################
#                        配置prometheus                                           #
##################################################################################

### 监控数据库

- name: monitor | add postgres discover server
  file:  
    path: /etc/prometheus/pgs
    state: directory
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: monitor | add postgres server yml
  copy:
    dest: /etc/prometheus/pgs/{{ inventory_hostname }}.yml
    content: | 
      - targets: ['{{ inventory_hostname }}:9187']
        labels:
          pg_cluster_name: "{{ PG_CLUSTER_NAME }}"
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"

- name: monitor | add postgres rules
  copy:
    dest: /etc/prometheus/rules/pg_alert.yml
    src: rules/pg_alert.yml
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"

- name: monitor | create prometheus filediscover postgres yml
  blockinfile:
    path: /etc/prometheus/prometheus.yml
    state: present
    marker: "# {mark} Postgresql JOB  "
    content: |
      #  promethes auto discover postgres jobs  
        - job_name: 'postgresql'
          scrape_interval: 5s
          file_sd_configs:
            - refresh_interval: 10s
              files:
              - /etc/prometheus/pgs/*.yml 
    # validate: 'promtool check config %s'
  notify: restart_prometheus  
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

## 监控 patroni /metrics

- name: monitor | add patroni discover server
  file:  
    path: /etc/prometheus/patroni
    state: directory
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: monitor | add patroni server yml
  copy:
    dest: /etc/prometheus/patroni/{{ inventory_hostname }}.yml
    content: | 
      - targets: ['{{ inventory_hostname }}:8008']
        labels:
          cluster_name: "{{ PG_CLUSTER_NAME }}"
          instance: "{{ application_name }}"
    owner: prometheus
    group: prometheus
    # mode: 0644
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"

- name: monitor | create prometheus filediscover patroni yml
  blockinfile:
    path: /etc/prometheus/prometheus.yml
    state: present
    marker: "# {mark} Patroni JOB  "
    content: |
      #  promethes auto discover patroni jobs  
        - job_name: 'patroni'
          scheme: http
          scrape_interval: 5s
          file_sd_configs:
            - refresh_interval: 10s
              files:
              - /etc/prometheus/patroni/*.yml
    # validate: promtool check config %s
  notify: restart_prometheus  
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

## 监控 patroni status

- name: monitor | create prometheus filediscover patroni status code yml
  blockinfile:
    path: /etc/prometheus/prometheus.yml
    state: present
    marker: "# {mark} Patroni Status JOB  "
    content: |
      #  promethes auto discover patroni status jobs  
        - job_name: 'patroni_health'
          scrape_interval: 60s
          scrape_timeout: 59s
          metrics_path: /probe
          params:
            module: [http_2xx]  # Look for a HTTP 200 response.
          file_sd_configs:
            - refresh_interval: 10s
              files:
              - /etc/prometheus/patroni/*.yml

          relabel_configs:
            - source_labels: [__address__]
              regex: '(.*)'
              target_label: __param_target
              action: replace
              replacement: '$1/health'
            - target_label: __address__
              replacement: 127.0.0.1:9115
    # validate: promtool check config %s
  notify: restart_prometheus  
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

##################################################################################
#                        配置grafana                                              #
##################################################################################
- name: monitor | prepare  dashboard json
  copy:
    dest: /var/lib/grafana/dashboards/
    src: dashboards/pg
    owner: grafana
    group: grafana
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  

- name: monitor | load grafana dashboard
  shell: | 
    sh /var/lib/grafana/load_dashboard.sh
    sh /var/lib/grafana/clean_dashboards_jsons.sh
  delegate_to: "{{ item }}"
  with_items: "{{ groups['monitor'] }}"
  run_once: true  